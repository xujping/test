{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "「Ping數學和設計5.ipynb」的副本",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/xujping/test/blob/main/Ping%E6%95%B8%E5%AD%B8%E5%92%8C%E8%A8%AD%E8%A8%885_ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "inWeKCrs-aa-"
      },
      "source": [
        "from PIL import Image\n",
        "import PIL\n",
        "import matplotlib.pyplot as plt\n",
        "import pylab"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9nwid0iV8FnG"
      },
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CHkET7zVAtuS"
      },
      "source": [
        "向右漸層改變顏色"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "oKL_ZxSX-gWg",
        "outputId": "d3d7f970-5b6d-42fe-9af1-6a6a07892e9e"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((i,j),(20*i,0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACG0lEQVR4nO3SsRGAMBDAsA8zMHvmZQKacG44qXfnNbPn1H1cav/eXh9aeGUsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGImEsEsYiYSwSxiJhLBLGIvEATLUC2peggkoAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8323510>"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hSRTc8aFAx_K"
      },
      "source": [
        "向左漸層改變顏色"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "dviwZAYyAxKy",
        "outputId": "ec9eb681-6d4d-4ce9-a09f-ad73fc25be07"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((n-i-1,j),(20*i,0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACHUlEQVR4nO3SsRGAIADAQHT/mkkcyyGcgAYujfffp8v1jDl2vdul9u/tfdDCkrFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLhLFIGIuEsUgYi4SxSBiLxAfmagsmuY/uRwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8281E50>"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "j7wO1MibA9GO"
      },
      "source": [
        "向下漸層改變顏色"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "RFFxQ9_nANFw",
        "outputId": "ec08c182-f224-473b-d996-f5f831d1a3ec"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((j,i),(20*i,0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACJElEQVR4nO3awQ2AMAwEQYMogdqplyayihTNVODH6l6+Zr6B1e7dB3AmYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBaJ5919AUeyWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCT8vJOwWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCR+hvEC7PmeJU8AAAAASUVORK5CYII=\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8282750>"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wBWtSgT8BFzo"
      },
      "source": [
        "向上漸層改變顏色\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "AbA47T3LBD0F",
        "outputId": "9c199ea9-0f8b-4b84-b2a3-f7b6a85290a5"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((j,m-i-1),(20*i,0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACJ0lEQVR4nO3asQ2AMBAEQYPcf+hKKIsiaIKVJWumgg9WF/31jDXgb/fuAziTsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIvEfHdfwJEsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFgk/7yQsFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFokP3nQLOMrn6pUAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8282850>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wqFyQAcuBO33"
      },
      "source": [
        "沿45度角改變顏色\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "Aj_Hm4rOBNKq",
        "outputId": "50c552fd-0736-408e-8c12-758553b1ca6a"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((i,j),(20*(i+j),0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACTklEQVR4nO3aMRKCABAEQbTMTXy77/UFBHI1KNCdbzZ10d2W5b1s9dq8tD379j7YwiphkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFonHEf+pbf9/62KREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGR8PNum2xdLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBJ+3m2TrYtFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFws+77arnYOtikRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkfDzfvLt5G99wsUiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIi4ef9ANtf/a1PuFgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgk/LzvtD3i3/qEi0VCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEXCz/sXrva3PuFikRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkbjcz7u/9X24WCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCQ+DLQIqrFeqcoAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8283910>"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "l454xw5pBwJC",
        "outputId": "18ae0219-0c7c-4924-c1cb-741745a3c2a5"
      },
      "source": [
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    new.putpixel((i,j),(20*(18-i-j),0,150))\n",
        "#new\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACT0lEQVR4nO3aMQ7CMBQFwYB8/5JT0nCCcIJU1pKYzPRPcrFy9R/79trofSa27wW3z4ktHBIWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRhnP2Ald7tbd/PO5QiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSNzu5t3d+m+2fiwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSS968u1u//taPRUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSEReK0m3d36/+99WOREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGRmLp5d7due8SPRUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERWK4W7cttn4sEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEsIiISwSwiIhLBLCIiEsEmPFe2rb62/9WCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCTcvNsmWz8WCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCTfvtsnWj0VCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEXiC6iCTC5tidBBAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8293590>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "0sSUh2QuB5c6",
        "outputId": "b5e71150-e1e5-4d6f-ef63-d94729c040dd"
      },
      "source": [
        "from PIL import Image\n",
        "import PIL\n",
        "m, n = 10, 10\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    if i**2==j:\n",
        "      new.putpixel((i,j),(255,0,0))\n",
        "new.resize((200,200),resample=PIL.Image.BOX)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAACRElEQVR4nO3cMQrDMBAAwSj4/19WXuBG8uIgZvoDFctVh8b8bJhb0xzs+/YDOJOwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi8S1dbc+xvqse/mj2VgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkhEVCWCSERUJYJIRFQlgkrq1pd+vcsLFICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEjs/fO+Y4z1Wf/L/z0bi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi8R7N+/u1o9mY5EQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZEQFglhkRAWCWGREBYJYZG43n7AkjHWZ+d87h3csrFICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBICIuEsEgIi4SwSAiLhLBI/ADAnBCR23TGUwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC829A7D0>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "EowS6wHMJT8V",
        "outputId": "e4975e59-ef4b-49a9-dd7e-42c5ab69aee5"
      },
      "source": [
        "from PIL import Image\n",
        "m, n = 100, 100\n",
        "new = Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    if (i**2-j)%10==0:\n",
        "      new.putpixel((i,j),(100,255,100))\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAAC8klEQVR4nO3aQUoDURRE0d/iUtOrymLbgQ4iJoaIF/rBOVO7Zo/CfGq7HJe11nVd1+v2tcvK3vX2hww8tR3HsV6/zdvvZWV/ZjUWia/Ggv+lsUg4LBIOi8S3w9rX/vkv/S8efSMre/uNxiLx5FfhxDdf2TNkNRaJ90d/mPvmK3uGrMYi4eWdhMYi4bBIOCwSdw7rDO+2stOzGovEZvMuW2Q1Fgmbd9kkq7FIeHknobFIOCwSDouEzbtsktVYJGzeZW3emcPmXTbJaiwSXt5JaCwSDouEwyJh8y6bZDUWCZt32SSrsUjYvMsmWY1Fwss7CY1FwmGRcFgkbN5lk6zGImHzLmvzzhw277JJVmOR8PJOQmORcFgkHBYJm3fZJKuxSNi8yyZZjUXC5l02yWosEl7eSWgsEg6LhMMiYfMum2Q1Fgmbd1mbd+aweZdNshqLhJd3EhqLhMMi4bBI2LzLJlmNRcLmXTbJaiwSNu+ySVZjkfDyTkJjkXBYJBwWCZt32SSrsUjYvMvavDOHzbtsktVYJLy8k9BYJBwWCYdFwuZdNslqLBI277JJVmORsHmXTbIai4SXdxIai4TDIuGwSNi8yyZZjUXC5l3W5p05bN5lk6zGIuHlnYTGIuGwSDgsEjbvsklWY5GweZdNshqLhM27bJLVWCS8vJPQWCQcFgmHRcLmXTbJaiwSNu+yNu/MYfMum2Q1Fgkv7yQ0FgmHRcJhkbB5l02yGouEzbtsktVYJGzeZZOsxiLh5Z2ExiLhsEg4LBI277JJVmORsHmXtXlnDpt32SSrsUh4eSehsUg4LBIOi4TNu2yS1VgkbN5lk6zGImHzLptkNRYJL+8kNBYJh0XCYZGweZdNshqLhM27rM07c9i8yyZZjUXCyzsJjUXCYZFwWCRs3mWTrMYiYfMum2Q1Fgmbd9kkq7FIeHknobFIOCwSDouEzbtsktVYJGzeZW3emcPmXTbJaiwSXt5JaCwSDouEwyJh8y6bZDUWiQ8UFJ5qcYCoOAAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC8282450>"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 217
        },
        "id": "yxCvYZD1JxA_",
        "outputId": "6ea18486-50f7-47d0-ffcc-523d3b0c06da"
      },
      "source": [
        "from PIL import Image\n",
        "m, n = 100, 100\n",
        "new=Image.new('RGB',(m,n),(255,255,255))\n",
        "for i in range(m):\n",
        "  for j in range(n):\n",
        "    if 4<(i**2-j**3)%10<8:\n",
        "      new.putpixel((i,j),(0,0,0))\n",
        "new.resize((200,200),resample=PIL.Image.BOX)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAIAAAAiOjnJAAADxklEQVR4nO3awU5UQRQGYYfw/q88LrgxIg02JnXTJ361MgPlalIdj//j+Xz+WPF4PP745LPf5HI/ui+bfxfwLf7yxXo+n/tfZC73F4qFhMfvX7q3t/O7n3C5Hz9RLCS8fv3jf36Auf+5q1hIeHeQePsO7ryyn10yuNy3PysWEhbF2tIOvvlyT3AVCwkvZ95tudNdxULC9ZSedrflTncVCwmvZ95tudNdxULCu/8rPOduy53uKhYS3hVr50397He4XP8qRI7NOzdxFQsJNu/cxFUsJNi8cxNXsZCwWJCecLflTncVCwmLYm1pY7fY3HtcxUKCzTs3cRULCddTetrdljvdVSwk2LxzE1exkGDzzk1cxUKCzTs3cRULCTbv3MRVLCTYvHMTV7GQYPPOTVzFQsJiQXrC3ZY73VUsJCyKtaWN3WJz73EVCwk279zEVSwkXE/paXdb7nRXsZBg885NXMVCgs07N3EVCwk279zEVSwk2LxzE1exkGDzzk1cxUKCzTs3cRULCYsF6Ql3W+50V7GQsCjWljZ2i829x1UsJNi8cxNXsZBwPaWn3W25013FQoLNOzdxFQsJNu/cxFUsJNi8cxNXsZBg885NXMVCgs07N3EVCwk279zEVSwkLBakJ9xtudNdxULColhb2tgtNvceV7GQYPPOTVzFQsL1lJ52t+VOdxULCTbv3MRVLCTYvHMTV7GQYPPOTVzFQoLNOzdxFQsJNu/cxFUsJNi8cxNXsZCwWJCecLflTncVCwmLYm1pY7fY3HtcxUKCzTs3cRULCddTetrdljvdVSwk2LxzE1exkGDzzk1cxUKCzTs3cRULCTbv3MRVLCTYvHMTV7GQYPPOTVzFQsJiQXrC3ZY73VUsJCyKtaWN3WJz73EVCwk279zEVSwkXE/paXdb7nRXsZBg885NXMVCgs07N3EVCwk279zEVSwk2LxzE1exkGDzzk1cxUKCzTs3cRULCYsF6Ql3W+50V7GQsCjWljZ2i829x1UsJNi8cxNXsZBwPaWn3W25013FQoLNOzdxFQsJNu/cxFUsJNi8cxNXsZBg885NXMVCgs07N3EVCwk279zEVSwkLBakJ9xtudNdxULColhb2tgtNvceV7GQYPPOTVzFQsL1lJ52t+VOdxULCTbv3MRVLCTYvHMTV7GQYPPOTVzFQoLNOzdxFQsJNu/cxFUsJNi8cxNXsZCwWJCecLflTncVCwmLYm1pY7fY3HtcxUKCzTs3cRULCddTetrdljvdVSwk2LxzE1exkGDzzk1cxULCT37tmLvaPh2YAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=200x200 at 0x7F8FC82A58D0>"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ASbaa2uqLTDD"
      },
      "source": [
        "花窗"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 286
        },
        "id": "G8IJhX0sTtwb",
        "outputId": "0c682bc2-ca16-49f1-c155-5b9c51f19308"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "figure, axes = plt.subplots()\n",
        "draw_circle = plt.Circle((0.5, 0.5), 0.3,fill=False)\n",
        "\n",
        "axes.set_aspect(1)\n",
        "axes.add_artist(draw_circle)\n",
        "#plt.title('Circle')\n",
        "#plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.patches.Circle at 0x7f8fc7b55e50>"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "jRsvqhZLUdNK",
        "outputId": "c481570a-4cfa-486f-d930-bbf3c2d03239"
      },
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "x = np.linspace(-0.5, 0.5, 100)\n",
        "y = np.linspace(-0.5, 0.5, 100)\n",
        "a, b = np.meshgrid(x, y)\n",
        "C = a**2+b**2-0.2\n",
        "\n",
        "figure, axes = plt.subplots()\n",
        "\n",
        "axes.contour(a,b,C,[0])\n",
        "axes.set_aspect(1)\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        },
        "id": "0PFZClXSMkCk",
        "outputId": "65e25789-663d-4762-ccd3-a41f0612fbd0"
      },
      "source": [
        "from PIL import Image\n",
        "import PIL\n",
        "m, n = 10, 10\n",
        "new=Image.new('RGB',(m,n),(0,0,0))\n",
        "for i in range(m):     \n",
        "  for j in range(n):\n",
        "    if i**2+j**2==25:\n",
        "\n",
        "#    if i==1 or j==1 or i==8 or j==8 or i**2+j**2==25 or (i-9)**2+j**2==25 or i**2+(j-9)**2==25 or (i-9)**2+(j-9)**2==25 :\n",
        "      new.putpixel((i,j),(0,255,0))\n",
        "new.resize((100,100),resample=PIL.Image.BOX)\n",
        "#new\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAAn0lEQVR4nO3aMQ6AIBAAQfH/f9begmQLRc1MSwHZUFwCY3unY7o6HjrFxb5m228SKxArECsQKxArECsQKxALAAAAAABYbtF/lO2l/2TmvO4EYgViBWIFYgViBWIFYgViBXdOyh+c0efcrECsQKxArECsQKxArECsQKxg/G/Ovo+bFYgViBWIFYgViBWIFYgViAUAAAAAAAAAAAAAAD91AhmNBE0ozsgVAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=100x100 at 0x7F8FC829A290>"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8mheMiFSVi27",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        },
        "outputId": "4503c295-85ad-46d7-e776-43eb7d9ae12b"
      },
      "source": [
        "from PIL import Image\n",
        "import PIL\n",
        "m, n = 10, 10\n",
        "new=Image.new('RGB',(m,n),(0,0,0))\n",
        "for i in range(m):     \n",
        "  for j in range(n):\n",
        "    if i==1 or j==1 or i==8 or j==8 :\n",
        "\n",
        "#    if i==1 or j==1 or i==8 or j==8 or i**2+j**2==25 or (i-9)**2+j**2==25 or i**2+(j-9)**2==25 or (i-9)**2+(j-9)**2==25 :\n",
        "      new.putpixel((i,j),(0,255,0))\n",
        "new.resize((100,100),resample=PIL.Image.BOX)\n",
        "#new"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAABA0lEQVR4nO3cMQqAMBAAQeP//6ytNgmLFiIzrQi6XBFS3NjmjunTsXj7ix780f7qh/ycWIFYgViBWIFYgViBWIFYwVicaLkwWYFYgViBWIFYgViBWIFYgVjB6hbdHfyFyQrECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECsQKxArECmyTDExWIFYgViBWIFYgViBWIFYgVmCb5J1tkm8RKxArECsQKxArECsQKxArOAECbAjCnR6jywAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=100x100 at 0x7F8FC7838ED0>"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 117
        },
        "id": "aCrc6mf1XoVx",
        "outputId": "0733f4ed-19e3-4f24-a9c1-57d150c571b4"
      },
      "source": [
        "from PIL import Image\n",
        "import PIL\n",
        "m, n = 10, 10\n",
        "new=Image.new('RGB',(m,n),(0,0,0))\n",
        "for i in range(m):     \n",
        "  for j in range(n):\n",
        "    if i==0 or j==0 or i==9 or j==9 or i+j==7 or i+j==11: #or i-j+2==0 or i-j-2==0 :\n",
        "\n",
        "#    if i==1 or j==1 or i==8 or j==8 or i**2+j**2==25 or (i-9)**2+j**2==25 or i**2+(j-9)**2==25 or (i-9)**2+(j-9)**2==25 :\n",
        "      new.putpixel((i,j),(0,255,0))\n",
        "new.resize((100,100),resample=PIL.Image.BOX)\n",
        "#new"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAABLUlEQVR4nO3dWwrCMBBA0Vbc/5Z1B2kvscbHOb8FDZf5GCHUfXtsnHRbfYBvIlYgViBWIFYgViBWIFYgVnA/eL6/5RTV+FfHzJmHn2yyArECsQKxArECsQKxArECsYKjDX6V63b0CSYrECsQKxArECsQKxArECsQK1i3wa/a0SduDZmsQKxArECsQKxArECsQKxArODKDf4zd/Tx97pF8ypiBWIFYgViBWIFYgViBWIFcxv8N+7oE0xWIFYgViBWIFYgViBWIFYgVnC0wf/Zjj5msgKxArECsQKxArECsQKxArGCde+i+cgdfcxkBWIFYgViBWIFYgViBWIFYgW/eA/+MiYrECsQKxArECsQKxArECsQK9j9o9N5JisQKxArECsQKxArECsQKxAreALWshDUCp73xwAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<PIL.Image.Image image mode=RGB size=100x100 at 0x7F8FC7D328D0>"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "o5vVXb8sdoRm",
        "outputId": "acb1e337-0f6a-4ea4-9b1b-5dd96a09738e"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.figure(facecolor='blue')\n",
        "xs = pylab.linspace(-5,5,100)\n",
        "ys1 = [(25-x**2)**0.5 for x in xs]\n",
        "ys2 = [(-1)*(25-x**2)**0.5 for x in xs]\n",
        "ys3 = [1 for x in xs]\n",
        "ys4 = [-1 for x in xs]\n",
        "plt.plot(xs, ys1,color='w',lw=10)\n",
        "plt.plot(xs, ys2,color='w',lw=10)\n",
        "plt.plot(xs,ys3,color='w',lw=10)\n",
        "plt.plot(xs,ys4,color='w',lw=10)\n",
        "plt.plot(ys3,xs,color='w',lw=10)\n",
        "plt.plot(ys4,xs,color='w',lw=10)\n",
        "plt.axis('off')\n",
        "plt.axis('equal')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-5.5, 5.5, -5.5, 5.5)"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "UZ4zYzta_C67",
        "outputId": "2efeda61-e84b-4c02-d9f4-890d4e1bba5f"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.figure(facecolor='blue')#edgecolor='black')\n",
        "m, n = 2,2\n",
        "i,t=-0,0\n",
        "for j in range(-n,n+1):\n",
        "  if j%2==0 :\n",
        "    k = j//2\n",
        "    xs = pylab.linspace(-1+2*t,1+2*t,100)\n",
        "    ys1 = [2*k+(1-(x-2*t)**2)**0.5 for x in xs]\n",
        "    ys2 = [2*k+(-1)*(1-(x-2*t)**2)**0.5 for x in xs]\n",
        "    ys3 = [0.2+2*k for x in xs]\n",
        "    ys4 = [-0.2+2*k for x in xs]\n",
        "    ys5 = pylab.linspace(-1+2*k,1+2*k,100)\n",
        "    xs1 = [0.2+2*t for y in ys5]\n",
        "    xs2 = [-0.2+2*t for y in ys5]\n",
        "    plt.plot(xs, ys1,color='w',lw=5)\n",
        "    plt.plot(xs, ys2,color='w',lw=5)\n",
        "    plt.plot(xs,ys3,color='w',lw=5)\n",
        "    plt.plot(xs,ys4,color='w',lw=5)\n",
        "    plt.plot(xs1,ys5,color='w',lw=5)\n",
        "    plt.plot(xs2,ys5,color='w',lw=5)\n",
        "plt.axis('off')\n",
        "plt.axis('equal')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-1.1, 1.1, -3.3, 3.3)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "d4u8y9iA_ECk",
        "outputId": "0ed2e279-7b33-4131-8266-ef0021ed2f9a"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "plt.figure(facecolor='blue')#edgecolor='black')\n",
        "m, n = 2,2\n",
        "#0i,t=-0,0\n",
        "for i in range(-m,m+1):\n",
        "  if i%2==0:\n",
        "    t = i//2\n",
        "  for j in range(-n,n+1):\n",
        "    if j%2==0 :\n",
        "      k = j//2\n",
        "      xs = pylab.linspace(-1+2*t,1+2*t,100)\n",
        "      ys1 = [2*k+(1-(x-2*t)**2)**0.5 for x in xs]\n",
        "      ys2 = [2*k+(-1)*(1-(x-2*t)**2)**0.5 for x in xs]\n",
        "      ys3 = [0.2+2*k for x in xs]\n",
        "      ys4 = [-0.2+2*k for x in xs]\n",
        "      ys5 = pylab.linspace(-1+2*k,1+2*k,100)\n",
        "      xs1 = [0.2+2*t for y in ys5]\n",
        "      xs2 = [-0.2+2*t for y in ys5]\n",
        "      plt.plot(xs, ys1,color='w',lw=5)\n",
        "      plt.plot(xs, ys2,color='w',lw=5)\n",
        "      plt.plot(xs,ys3,color='w',lw=5)\n",
        "      plt.plot(xs,ys4,color='w',lw=5)\n",
        "      plt.plot(xs1,ys5,color='w',lw=5)\n",
        "      plt.plot(xs2,ys5,color='w',lw=5)\n",
        "plt.axis('off')\n",
        "plt.axis('equal')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(-3.3, 3.3, -3.3, 3.3)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RS-G__7vJgmL"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}